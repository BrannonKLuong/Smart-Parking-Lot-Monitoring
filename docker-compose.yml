# In your docker-compose.yml
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s 

  backend:
    build:
      context: ./backend  # <-- IMPORTANT: Set context to ./backend
      dockerfile: Dockerfile # Dockerfile is now located at backend/Dockerfile
    depends_on:
      db: 
        condition: service_healthy 
    environment:
      # Use HTTP_UPLOAD_STREAM if you added this specific check in main.py,
      # otherwise WEBSOCKET_STREAM will also work if http_upload_frame_endpoint checks for it
      # to enable using the video_frame_queue.
      VIDEO_SOURCE_TYPE: "HTTP_UPLOAD_STREAM" 
      VIDEO_PROCESSING_FPS: "5" # Adjust as needed for local performance
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      FIREBASE_CRED: /app/secrets/firebase-sa.json # In-container path, matching main.py
      PYTHONUNBUFFERED: "1" 
      LOG_LEVEL: "debug" 
      # Add any other env vars your main.py might need
    ports:
      - "8000:8000" 
    # volumes: # Optional: for live code reloading during local development
    #   - ./backend/app:/app/app 

volumes:
  pgdata: