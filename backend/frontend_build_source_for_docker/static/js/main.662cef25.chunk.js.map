{"version":3,"sources":["Header.js","Notifications.js","SpotTile.js","SpotsEditor.js","WebcamStreamer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_ref","totalSpots","freeSpots","React","createElement","className","Notifications","notes","onFilter","muted","toggleMute","collapsed","setCollapsed","useState","onClick","c","map","n","i","key","spot_id","Date","timestamp","toLocaleTimeString","SpotTile","id","isFree","freeSince","highlight","secs","setSecs","useEffect","t0","getTime","isNaN","console","warn","concat","iv","setInterval","delta","Math","max","floor","now","clearInterval","log","SpotsEditor","initialSpots","videoSize","onSave","setSpots","apiBaseUrl","currentSpots","setCurrentSpots","history","setHistory","selectedBoxId","setSelectedBoxId","videoFeedUrl","useMemo","processedInitialSpots","s","_objectSpread","String","x","round","y","w","h","updateSpotsAndHistory","newSpots","slice","onDragResize","updatedSpots","addBox","newId","length","parseInt","defaultBox","is_available","newSpotList","removeBox","filteredSpots","filter","disabled","undo","prevHistory","previousSpots","handleSave","JSON","parse","stringify","spotsToSave","style","width","height","e","target","currentTarget","src","alt","onError","display","spot","Rnd","bounds","size","position","onDragStop","_","d","onResizeStop","__","ref","___","pos","offsetWidth","offsetHeight","stopPropagation","border","backgroundColor","boxSizing","cursor","VIDEO_CONSTRAINTS","video","WebcamStreamer","onStreamingActive","isCameraActive","setIsCameraActive","isStreaming","setIsStreaming","error","setError","statusMessage","setStatusMessage","videoRef","useRef","canvasRef","streamRef","streamIntervalRef","uploadFrameEndpoint","current","startCamera","useCallback","async","navigator","mediaDevices","getUserMedia","Error","stream","srcObject","play","err","name","message","stopCamera","getTracks","forEach","track","stop","captureAndSendFrame","canvas","videoWidth","videoHeight","paused","ended","getContext","drawImage","frameDataUrl","toDataURL","response","fetch","method","headers","body","frame","ok","errorData","text","status","statusText","autoPlay","playsInline","Promise","resolve","setTimeout","msg","handleStopStreaming","role","API_BASE_URL","process","REACT_APP_API_BASE_URL","PROCESSED_VIDEO_URL","API_SPOTS_SAVE_ROUTE","API_SPOTS_GET_ROUTE","App","editMode","setEditMode","spots","statuses","setStatuses","times","setTimes","setNotes","setMuted","filterSpot","setFilterSpot","streamSource","setStreamSource","processedFeedKey","setProcessedFeedKey","prevStatusesRef","fetchSpots","startsWith","substring","getWebSocketUrl","then","r","errorDetail","json","data","newApiSpots","newSpotConfigs","currentFetchStatuses","spotIdStr","push","newNotesToGenerate","prevTimes","newTimesData","spotConfig","isNowOccupied","nowTimestamp","toISOString","notificationId","random","undefined","prevNotesState","catch","timerId","intervalId","clearTimeout","timers","note","prevNotes","timer","updatedSpotsFromEditor","spotsPayloadToSend","errData","detail","Array","isArray","includes","errTxt","alert","handleWebcamStreamingActive","isActive","visibleNotes","totalSpotsCount","freeSpotsCount","Object","values","isOccupied","Fragment","m","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uLAIe,SAASA,EAAMC,GAA6B,IAA5B,WAAEC,EAAU,UAAEC,GAAWF,EACtD,OAEEG,IAAAC,cAAA,UAAQC,UAAU,yDAChBF,IAAAC,cAAA,MAAIC,UAAU,oCAAmC,kBAC/BH,EAAU,IAAED,EAAW,WCPhC,SAASK,EAAaN,GAKjC,IALkC,MACpCO,EAAK,SACLC,EAAQ,MACRC,EAAK,WACLC,GACDV,EACC,MAAOW,EAAWC,GAAgBC,oBAAS,GAE3C,OACEV,IAAAC,cAAA,OAAKC,UAAU,iCACbF,IAAAC,cAAA,OAAKC,UAAU,0CACbF,IAAAC,cAAA,MAAIC,UAAU,0DAAyD,UACvEF,IAAAC,cAAA,UACEU,QAASA,IAAMF,EAAaG,IAAMA,GAClCV,UAAU,4CAETM,EAAY,SAAW,cAI1BA,GACAR,IAAAC,cAAA,MAAIC,UAAU,mEACXE,EAAMS,IAAI,CAACC,EAAGC,IACbf,IAAAC,cAAA,MACEe,IAAKD,EACLJ,QAASA,IAAMN,EAASS,EAAEG,SAC1Bf,UAAU,wFAEVF,IAAAC,cAAA,OAAKC,UAAU,gDAA+C,QACtDY,EAAEG,QAAQ,UAElBjB,IAAAC,cAAA,OAAKC,UAAU,4CACZ,IAAIgB,KAAKJ,EAAEK,WAAWC,yBAOjCpB,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UACEU,QAASJ,EACTL,UAAU,0CAETI,EAAQ,SAAW,UC5Cf,SAASe,EAAQxB,GAAwC,IAAvC,GAAEyB,EAAE,OAAEC,EAAM,UAAEC,EAAS,UAAEC,GAAW5B,EACnE,MAAO6B,EAAMC,GAAWjB,mBAAS,GAkCjC,OAhCAkB,oBAAU,KAER,IAAKL,EAEH,YADAI,EAAQ,GAKV,MACME,EADW,IAAIX,KAAKM,GACNM,UAGpB,GAAIC,MAAMF,GAGN,OAFAG,QAAQC,KAAK,YAADC,OAAaZ,EAAE,4CAAAY,OAA2CV,SACtEG,EAAQ,GAKZ,MAAMQ,EAAKC,YAAY,KACrB,MAAMC,EAAQC,KAAKC,IAAI,EAAGD,KAAKE,OAAOtB,KAAKuB,MAAQZ,GAAM,MACzDF,EAAQU,IACP,KAGH,MAAO,KACLK,cAAcP,GACdH,QAAQW,IAAI,YAADT,OAAaZ,EAAE,kCAG3B,CAACC,EAAQC,EAAWF,IAGrBtB,IAAAC,cAAA,OACEC,UAAS,8GAAAgC,OAGLX,EACE,8BACA,0BAAyB,cAAAW,OAC3BT,EAAY,uBAAyB,GAAE,YAE3Cd,QAASA,QAETX,IAAAC,cAAA,OAAKC,UAAU,sBAAqB,QAAMoB,GACzCC,EACCvB,IAAAC,cAAA,OAAKC,UAAU,WAAY6B,MAAML,GAA8B,iBAAzB,YAAAQ,OAAeR,EAAI,MAEzD1B,IAAAC,cAAA,OAAKC,UAAU,WAAU,a,YCjDlB,SAAS0C,EAAW/C,GAA6D,IAA5D,aAAEgD,EAAY,UAAEC,EAAS,OAAEC,EAAM,SAAEC,EAAQ,WAAEC,GAAYpD,EAC3F,MAAOqD,EAAcC,GAAmBzC,mBAAS,KAC1C0C,EAASC,GAAc3C,mBAAS,KAChC4C,EAAeC,GAAoB7C,mBAAS,MAE7C8C,EAAeC,kBAAQ,IACtBR,EACC,GAANf,OAAUe,EAAU,gBADI,GAEvB,CAACA,IAEJrB,oBAAU,KACRI,QAAQW,IAAI,gDAAiDE,GAC7D,MAAMa,EAAwBb,EAAahC,IAAI8C,GAACC,wBAAA,GACzCD,GAAC,IACJrC,GAAIuC,OAAOF,EAAErC,IACbwC,EAAGxB,KAAKyB,MAAMJ,EAAEG,GAAK,GACrBE,EAAG1B,KAAKyB,MAAMJ,EAAEK,GAAK,GACrBC,EAAG3B,KAAKyB,MAAMJ,EAAEM,GAAK,IACrBC,EAAG5B,KAAKyB,MAAMJ,EAAEO,GAAK,OAEzBf,EAAgBO,GAChBL,EAAW,CAACK,IACZH,EAAiB,OAChB,CAACV,IAEJ,MAAMsB,EAAyBC,IAC7BjB,EAAgBiB,GAChBf,EAAWa,GAAK,IAAIA,EAAEG,OAAO,IAAKD,KAG9BE,EAAeA,CAAChD,EAAIwC,EAAGE,EAAGC,EAAGC,KACjC,MAAMK,EAAerB,EAAarC,IAAI8C,GACpCE,OAAOF,EAAErC,MAAQuC,OAAOvC,GAAGsC,wBAAA,GACtBD,GAAC,IACJG,EAAGxB,KAAKyB,MAAMD,GACdE,EAAG1B,KAAKyB,MAAMC,GACdC,EAAG3B,KAAKyB,MAAME,GACdC,EAAG5B,KAAKyB,MAAMG,KACZP,GAENQ,EAAsBI,IAgDxB,OACEvE,IAAAC,cAAA,OAAKC,UAAU,2DACbF,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAAA,UAAQU,QAhDC6D,KACb,MAAMC,EAAQvB,EAAawB,OAAS,EAAIpC,KAAKC,IAAI,KAAMW,EAAarC,IAAI8C,GAAKgB,SAAShB,EAAErC,GAAI,MAAQ,EAAI,EAClGsD,EAAa,CACftD,GAAIuC,OAAOY,GACXX,EAAG,GAAIE,EAAG,GAAIC,EAAG,IAAKC,EAAG,GACzBW,cAAc,GAElB7C,QAAQW,IAAI,gCAAiCiC,GAC7C,MAAME,EAAc,IAAI5B,EAAc0B,GACtCT,EAAsBW,IAuCO5E,UAAU,yLAAwL,YAC3NF,IAAAC,cAAA,UAAQU,QArCIoE,KAChB,GAAqB,MAAjBzB,EAAuB,OAC3B,MAAM0B,EAAgB9B,EAAa+B,OAAOtB,GAAKE,OAAOF,EAAErC,MAAQuC,OAAOP,IACvEtB,QAAQW,IAAI,wCAAyCqC,GACrDb,EAAsBa,GACtBzB,EAAiB,OAgCe2B,SAA2B,MAAjB5B,EAAuBpD,UAAU,mOAAkO,mBACzSF,IAAAC,cAAA,UAAQU,QA9BDwE,KACX,GAAI/B,EAAQsB,OAAS,EAAG,OACxB,MAAMU,EAAchC,EAAQiB,MAAM,GAAI,GAChCgB,EAAgBD,EAAYA,EAAYV,OAAS,GACvDrB,EAAW+B,GACXjC,EAAgBkC,GACZrC,GACAA,EAASqC,GAEb9B,EAAiB,OAqBU2B,SAAU9B,EAAQsB,OAAS,EAAGxE,UAAU,4OAA2O,QAC1SF,IAAAC,cAAA,UAAQU,QAnBK2E,KACjBtD,QAAQW,IAAI,iDAAkD4C,KAAKC,MAAMD,KAAKE,UAAUvC,KACxF,MAAMwC,EAAcxC,EAAarC,IAAI8C,IAAC,CACpCrC,GAAIuC,OAAOF,EAAErC,IACbwC,EAAGxB,KAAKyB,MAAMJ,EAAEG,GAChBE,EAAG1B,KAAKyB,MAAMJ,EAAEK,GAChBC,EAAG3B,KAAKyB,MAAMJ,EAAEM,GAChBC,EAAG5B,KAAKyB,MAAMJ,EAAEO,MAElBlC,QAAQW,IAAI,uDAAwD+C,GACpE3C,EAAO2C,IAS0BxF,UAAU,sLAAqL,uBAG9NF,IAAAC,cAAA,OACEC,UAAU,6FACVyF,MAAO,CAAEC,MAAO9C,EAAU8C,MAAOC,OAAQ/C,EAAU+C,QACnDlF,QAAUmF,IAAYA,EAAEC,SAAWD,EAAEE,eAAezC,EAAiB,QAEpEC,EACGxD,IAAAC,cAAA,OACIgG,IAAKzC,EACL0C,IAAI,mCACJhG,UAAU,gDACViG,QAAUL,IAAQA,EAAEC,OAAOG,IAAM,yCAA0CJ,EAAEC,OAAOJ,MAAMS,QAAQ,UAGtGpG,IAAAC,cAAA,OAAKC,UAAU,0FAAyF,kCAK3GgD,EAAarC,IAAIwF,GAChBrG,IAAAC,cAACqG,IAAG,CACFtF,IAAKqF,EAAK/E,GACViF,OAAO,SACPC,KAAM,CAAEZ,MAAOS,EAAKpC,EAAG4B,OAAQQ,EAAKnC,GACpCuC,SAAU,CAAE3C,EAAGuC,EAAKvC,EAAGE,EAAGqC,EAAKrC,GAC/B0C,WAAYA,CAACC,EAAGC,IACdtC,EAAa+B,EAAK/E,GAAIsF,EAAE9C,EAAG8C,EAAE5C,EAAGqC,EAAKpC,EAAGoC,EAAKnC,GAE/C2C,aAAcA,CAACF,EAAGG,EAAIC,EAAKC,EAAKC,IAC9B3C,EACE+B,EAAK/E,GACL2F,EAAInD,EAAGmD,EAAIjD,EACX+C,EAAIG,YAAaH,EAAII,cAGzBxG,QAAUmF,IACNA,EAAEsB,kBACF7D,EAAiB8C,EAAK/E,KAE1BqE,MAAO,CACL0B,OAAO,cAADnF,OAAgB2B,OAAOP,KAAmBO,OAAOwC,EAAK/E,IAAM,OAAS,yBAC3EgG,gBAAiBzD,OAAOP,KAAmBO,OAAOwC,EAAK/E,IAAM,oBAAsB,wBACnFiG,UAAW,aACXC,OAAQ,QAEVtH,UAAU,2CAEVF,IAAAC,cAAA,OAAKC,UAAU,+GACZmG,EAAK/E,QChJpB,MAEMmG,EAAoB,CAAEC,MAAO,CAAE9B,MAAO,IAAKC,OAAQ,MA0N1C8B,MAxNQ9H,IAAwC,IAAvC,WAAEoD,EAAU,kBAAE2E,GAAmB/H,EACvD,MAAOgI,EAAgBC,GAAqBpH,oBAAS,IAC9CqH,EAAaC,GAAkBtH,oBAAS,IACxCuH,EAAOC,GAAYxH,mBAAS,OAC5ByH,EAAeC,GAAoB1H,mBAAS,QAE7C2H,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MACnBE,EAAYF,iBAAO,MACnBG,EAAoBH,iBAAO,MAE3BI,EAAsBjF,kBAAQ,IAC7BR,EAIC,GAANf,OAAUe,EAAU,sBAHhBjB,QAAQC,KAAK,oFACN,MAGV,CAACgB,IAEJrB,oBAAU,IAED,KAEC6G,EAAkBE,SAClBjG,cAAc+F,EAAkBE,UAGvC,CAACD,IAGJ,MAAME,EAAcC,sBAAYC,UAE9BZ,EAAS,MACTE,EAAiB,sBACjB,IACE,IAAIW,UAAUC,eAAgBD,UAAUC,aAAaC,aAWnD,MAAM,IAAIC,MAAM,+BAXiD,CACjE,MAAMC,QAAeJ,UAAUC,aAAaC,aAAaxB,GACzDe,EAAUG,QAAUQ,EAChBd,EAASM,UACXN,EAASM,QAAQS,UAAYD,QACvBd,EAASM,QAAQU,QAEzBvB,GAAkB,GAClBM,EAAiB,kBACjBpG,QAAQW,IAAI,kDAId,MAAO2G,GACPtH,QAAQiG,MAAM,0CAA2CqB,EAAIC,KAAMD,EAAIE,SACvEtB,EAAS,cAADhG,OAAeoH,EAAIC,KAAI,OAAArH,OAAMoH,EAAIE,QAAO,MAChDpB,EAAiB,iBACjBN,GAAkB,GACdF,GAAmBA,GAAkB,KAE1C,CAACA,IAEE6B,EAAaZ,sBAAY,KAEzBJ,EAAkBE,UAClBjG,cAAc+F,EAAkBE,SAChCF,EAAkBE,QAAU,MAE5BH,EAAUG,UACZH,EAAUG,QAAQe,YAAYC,QAAQC,GAASA,EAAMC,QACrDrB,EAAUG,QAAU,MAElBN,EAASM,UAASN,EAASM,QAAQS,UAAY,MAEnDpB,GAAe,GACfF,GAAkB,GAEdF,GAAmBA,GAAkB,GACzCQ,EAAiB,oBAEhB,CAACR,IAEEkC,EAAsBjB,sBAAYC,UAGtC,IAAKT,EAASM,UAAYJ,EAAUI,UAAYd,IAAmBa,EAEjE,OAEF,MAAMhB,EAAQW,EAASM,QACjBoB,EAASxB,EAAUI,QACzB,GAAyB,IAArBjB,EAAMsC,YAA0C,IAAtBtC,EAAMuC,aAAqBvC,EAAMwC,QAAUxC,EAAMyC,MAE7E,OAGFJ,EAAOnE,MAAQ8B,EAAMsC,WACrBD,EAAOlE,OAAS6B,EAAMuC,YACNF,EAAOK,WAAW,MAC1BC,UAAU3C,EAAO,EAAG,EAAGqC,EAAOnE,MAAOmE,EAAOlE,QACpD,MAAMyE,EAAeP,EAAOQ,UAAU,aAlGpB,IAoGlB,IACE,MAAMC,QAAiBC,MAAM/B,EAAqB,CAChDgC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMrF,KAAKE,UAAU,CAAEoF,MAAOP,MAEhC,IAAKE,EAASM,GAAI,CAChB,MAAMC,QAAkBP,EAASQ,OACjChJ,QAAQiG,MAAM,8CAAD/F,OAA+CsI,EAASS,OAAM,KAAA/I,OAAIsI,EAASU,YAAcH,GACtG7C,EAAS,eAADhG,OAAgBsI,EAASS,OAAM,sBAMzC,MAAO3B,GACPtH,QAAQiG,MAAM,8DAA+DqB,GAC7EpB,EAAS,iDAGV,CAACL,EAAgBa,IAEpB9G,oBAAU,KAEJmG,GAAeF,GACbY,EAAkBE,SAASjG,cAAc+F,EAAkBE,SAC/DF,EAAkBE,QAAUvG,YAAY0H,EAAqB,KAC7D1B,EAAiB,aAADlG,OAhIH,EAgI2B,kBACxCF,QAAQW,IAAI,kDAADT,OAjIE,EAiI2D,SACpE0F,GAAmBA,GAAkB,KAErCa,EAAkBE,UACpBjG,cAAc+F,EAAkBE,SAChCF,EAAkBE,QAAU,KAC5BP,EAAiBP,EAAiB,gCAAkC,uBAIlED,IAAqC,IAAhBG,GAAuBH,GAAkB,IAE7D,KAAYa,EAAkBE,SAASjG,cAAc+F,EAAkBE,WAC7E,CAACZ,EAAaF,EAAgBiC,EAAqBlC,IAEtDhG,oBAAU,IACD,KAAQ6H,KACd,CAACA,IAmCJ,OACEzJ,IAAAC,cAAA,OAAKC,UAAU,2FACbF,IAAAC,cAAA,MAAIC,UAAU,wDAAuD,6BACrEF,IAAAC,cAAA,OAAKC,UAAU,yDACbF,IAAAC,cAAA,SAAO8G,IAAKsB,EAAU/H,OAAK,EAAC6K,UAAQ,EAACC,aAAW,EAAClL,UAAU,gCAE7DF,IAAAC,cAAA,UAAQ8G,IAAKwB,EAAW5C,MAAO,CAAES,QAAS,UAC1CpG,IAAAC,cAAA,OAAKC,UAAU,8CACX2H,EAKA7H,IAAAC,cAAA,UAAQU,QAAS8I,EAAYvJ,UAAU,2FAA0F,eAJjIF,IAAAC,cAAA,UAAQU,QAASiI,EAAa1I,UAAU,6FAA4F,gBAQrI2H,IAAmBE,EAClB/H,IAAAC,cAAA,UAAQU,QAnDamI,UAG3B,GADAZ,EAAS,OACJL,EAAgB,CAGnB,SADMe,KACDJ,EAAUG,QAEX,aAGE,IAAI0C,QAAQC,GAAWC,WAAWD,EAAS,KAMnD,GAAIzD,GAAkBW,EAAUG,QAC5B3G,QAAQW,IAAI,4EACZqF,GAAe,OACZ,CACH,MAAMwD,EAAM,yDACZxJ,QAAQiG,MAAM,mBAAoBuD,GAC7BvD,GAAOC,EAASsD,GACrBpD,EAAiB,uBA2BwBlD,UAAW2C,EAAgB3H,UAAU,mHAAkH,wBAG5L2H,GAAkBE,EACpB/H,IAAAC,cAAA,UAAQU,QA3BY8K,KAE1BzD,GAAe,IAyB6B9H,UAAU,iGAAgG,uBAIhJF,IAAAC,cAAA,OAAKC,UAAU,kGAAiG,qCAKpHF,IAAAC,cAAA,OAAKC,UAAU,gCACZ+H,GAAUjI,IAAAC,cAAA,OAAKC,UAAU,mEAAmEwL,KAAK,SAAQ1L,IAAAC,cAAA,cAAQ,WAAgBD,IAAAC,cAAA,QAAMC,UAAU,mBAAmB+H,IACrKjI,IAAAC,cAAA,OAAKC,UAAS,yBAAAgC,OAA2B2F,EAAiB,eAAiB,gBAAiB7H,IAAAC,cAAA,QAAMC,UAAU,iBAAgB,WAAc,IAAE2H,EAAiB,SAAW,YACxK7H,IAAAC,cAAA,OAAKC,UAAS,yBAAAgC,OAA2B6F,EAAc,eAAiB,gBAAiB/H,IAAAC,cAAA,QAAMC,UAAU,iBAAgB,mBAAsB,IAAE6H,EAAW,WAAA7F,OAvNjJ,EAuNyK,SAAU,WAAW,KAAGiG,EAAc,QClNlO,MAAMwD,EAAeC,mHAAYC,wBAA0B,wBACrDC,EAAmB,GAAA5J,OAAMyJ,EAAY,gBAErCI,EAAoB,GAAA7J,OAAMyJ,EAAY,uBACtCK,EAAmB,GAAA9J,OAAMyJ,EAAY,sBAK5B,SAASM,IACtB,MAAOC,EAAUC,GAAezL,oBAAS,IAClC0L,EAAOpJ,GAAYtC,mBAAS,KAC5B2L,EAAUC,GAAe5L,mBAAS,KAClC6L,EAAOC,GAAY9L,mBAAS,KAC5BN,EAAOqM,GAAY/L,mBAAS,KAC5BJ,EAAOoM,GAAYhM,oBAAS,IAC5BiM,EAAYC,GAAiBlM,mBAAS,OACtCmM,EAAcC,GAAmBpM,mBAAS,WAC1CqM,EAAkBC,GAAuBtM,mBAASQ,KAAKuB,OAExDwK,EAAkB3E,iBAAO,IAczB4E,GATkBrE,sBAAY,IAC7B8C,EACDA,EAAawB,WAAW,YAAmB,SAANjL,OAAgByJ,EAAayB,UAAU,GAAE,2BAC9EzB,EAAawB,WAAW,WAAkB,QAANjL,OAAeyJ,EAAayB,UAAU,GAAE,4BAChFpL,QAAQiG,MAAM,kEAAmE0D,GAC1E,OAJc3J,QAAQiG,MAAM,qCAA6C,MAK/E,GACwBoF,GAERxE,sBAAY,KAC7B4B,MAAMuB,GACHsB,KAAKC,IACJ,IAAKA,EAAEzC,GAAI,CACT,MAAM0C,EAAW,cAAAtL,OAAiBqL,EAAEtC,OAAM,MAAA/I,OAAKqL,EAAErC,WAAU,gCAAAhJ,OAA+B8J,GAE1F,MADAhK,QAAQiG,MAAMuF,EAAaD,GACrB,IAAIrE,MAAMsE,GAElB,OAAOD,EAAEE,SAEVH,KAAKI,IACJ,GAAIA,GAAQA,EAAKtB,MAAO,CACtB,MAAMuB,EAAcD,EAAKtB,MACnBwB,EAAiB,GACjBC,EAAuB,GAC7BF,EAAYhE,QAAQtD,IAClB,MAAMyH,EAAYjK,OAAOwC,EAAK/E,IAC9BsM,EAAeG,KAAK,CAACzM,GAAIwM,EAAWhK,EAAGuC,EAAKvC,EAAGE,EAAGqC,EAAKrC,EAAGC,EAAGoC,EAAKpC,EAAGC,EAAGmC,EAAKnC,IAC7E2J,EAAqBC,IAAczH,EAAKxB,eAE1C,MAAMmJ,EAAqB,GAC3BxB,EAASyB,IACP,MAAMC,EAAYtK,YAAA,GAAOqK,GAkBzB,OAjBAL,EAAejE,QAAQwE,IACrB,MAAML,EAAYK,EAAW7M,GACvB8M,EAAgBP,EAAqBC,GAE3C,IAA8B,IADAb,EAAgBtE,QAAQmF,KACE,IAAlBM,EAAyB,CAC7D,MAAMC,GAAe,IAAInN,MAAOoN,cAEhC,GADAJ,EAAaJ,GAAaO,GACrB/N,EAAO,CACV,MAAMiO,EAAc,GAAArM,OAAM4L,EAAS,KAAA5L,OAAImM,EAAY,KAAAnM,OAAII,KAAKkM,UAC5DR,EAAmBD,KAAK,CAAEzM,GAAIiN,EAAgBtN,QAAS6M,EAAW3M,UAAWkN,UAEpD,IAAlBD,SACFF,EAAaJ,IACO,IAAlBM,QAAuDK,IAA5BP,EAAaJ,KAChDI,EAAaJ,IAAa,IAAI5M,MAAOoN,iBAGnCJ,IAETlL,EAAS4K,GACTtB,EAAYuB,GACRG,EAAmBtJ,OAAS,GAC9B+H,EAASiC,GACe,IAAIV,KAAuBU,GAC5BrK,MAAM,EAAG,IAGlC4I,EAAgBtE,QAAO/E,YAAA,GAAQiK,QAE7B7L,QAAQiG,MAAM,yCAA0CyF,KAG7DiB,MAAM1G,IACHjG,QAAQiG,MAAM,6DAA8DA,MAEjF,CAAC3H,KAEJsB,oBAAU,KACR,IAAKsK,EAAU,CACb,MAAM0C,EAAUrD,WAAW,KAAQ2B,KAAiB,KAC9C2B,EAAazM,YAAY8K,EA1FZ,KA2FnB,MAAO,KAAQ4B,aAAaF,GAAUlM,cAAcmM,MAErD,CAAC3C,EAAUgB,IAEdtL,oBAAU,KACR,GAAqB,IAAjBxB,EAAMsE,OAAc,OACxB,MAAMqK,EAAS3O,EAAMS,IAAImO,GAAQzD,WAAW,IAAMkB,EAASwC,GAAaA,EAAUhK,OAAOnE,GAAKA,EAAEQ,KAAO0N,EAAK1N,KAlGlF,MAmG1B,MAAO,IAAMyN,EAAOpF,QAAQuF,GAASJ,aAAaI,KACjD,CAAC9O,IAEJ,MAAMkF,EAAauD,sBAAasG,IAC9B,MAAMC,EAAqB,CAAEhD,MAAO+C,EAAuBtO,IAAI8C,IAAC,CAAOrC,GAAIuC,OAAOF,EAAErC,IAAKwC,EAAGxB,KAAKyB,MAAMJ,EAAEG,GAAIE,EAAG1B,KAAKyB,MAAMJ,EAAEK,GAAIC,EAAG3B,KAAKyB,MAAMJ,EAAEM,GAAIC,EAAG5B,KAAKyB,MAAMJ,EAAEO,OACrKuG,MAAMsB,EAAsB,CAAErB,OAAQ,OAAQC,QAAS,CAAE,eAAgB,oBAAsBC,KAAMrF,KAAKE,UAAU2J,KACjH9B,KAAKC,GACCA,EAAEzC,GACAyC,EAAEE,OADWF,EAAEE,OAAOH,KAAK+B,IAAa,MAAMC,EAASD,EAAQC,QAAM,cAAApN,OAAkBqL,EAAEtC,QAAU,MAAM,IAAI/B,MAAMqG,MAAMC,QAAQF,GAAU/J,KAAKE,UAAU6J,GAAUzL,OAAOyL,MAAaX,MAAM,KAAQ,MAAM,IAAIzF,MAAM,cAADhH,OAAeqL,EAAEtC,OAAM,UAAA/I,OAAS6J,EAAoB,4BAGjRuB,KAAKI,IACJ,GAAIA,EAAKlE,SAAWkE,EAAKlE,QAAQiG,SAAS,mCACxCtD,GAAY,GAAQe,QACf,CAAE,MAAMwC,EAAShC,EAAK4B,OAAS/J,KAAKE,UAAUiI,EAAK4B,QAAW5B,EAAKlE,SAAW,kCAAoCxH,QAAQiG,MAAM,wBAAyByH,EAAQhC,GAAOiC,MAAM,yBAADzN,OAA0BwN,OAE/Mf,MAAM1G,IAAWjG,QAAQiG,MAAM,sBAAuBA,GAAQ0H,MAAM,uBAADzN,OAAwB+F,EAAMuB,aACnG,CAAC0D,IAEE0C,EAA8B/G,sBAAagH,IAC3CA,GAAY7C,EAAoB9L,KAAKuB,QACxC,IAEGqN,EAAenD,EAAavM,EAAM6E,OAAOnE,GAAK+C,OAAO/C,EAAEG,WAAa4C,OAAO8I,IAAevM,EAC1F2P,EAAkB3D,EAAM1H,OACxBsL,EAAiBC,OAAOC,OAAO7D,GAAUpH,OAAOkL,IAAeA,GAAYzL,OAEjF,OACE1E,IAAAC,cAAA,OAAKC,UAAS,8CACZF,IAAAC,cAACL,EAAM,CAACG,UAAWiQ,EAAgBlQ,WAAYiQ,IAC/C/P,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAAA,OAAKC,UAAU,sCACbF,IAAAC,cAAA,UAAQU,QAASA,IAAMwL,EAAYrG,IAAMA,GAAI5F,UAAU,6MACpDgM,EAAW,sBAAwB,uBAEpCA,GACAlM,IAAAC,cAAA,UAAQU,QAASA,KAA6B,WAAjBkM,GAA2BC,EAAgB,UAAWE,EAAoB9L,KAAKuB,QAAWvC,UAAS,uMAAyM,iCAO3T,WAAjB2M,GACC7M,IAAAC,cAAA,OAAKC,UAAWgM,EAAW,SAAW,cACpClM,IAAAC,cAAC0H,EAAc,CACb1E,WAAY0I,EACZ/D,kBAAmBgI,KAMxB1D,EACClM,IAAAC,cAAC2C,EAAW,CAACC,aAAcuJ,EAAOtJ,UAAW,CAAE8C,MAAO,IAAKC,OAAQ,KAAO9C,OAAQuC,EAAYtC,SAAUA,EAAUC,WAAY0I,IAE9H3L,IAAAC,cAAAD,IAAAoQ,SAAA,KACEpQ,IAAAC,cAACE,EAAa,CAACC,MAAO0P,EAAczP,SAAUuM,EAAetM,MAAOA,EAAOC,WAAYA,IAAMmM,EAAS2D,IAAMA,KAC5GrQ,IAAAC,cAAA,QAAMC,UAAU,OACI,WAAjB2M,GACC7M,IAAAC,cAAA,OAAKC,UAAU,mCACbF,IAAAC,cAAA,MAAIC,UAAU,wDAAuD,yBACrEF,IAAAC,cAAA,OAAKe,IAAK+L,EAAkB9G,IAAK6F,EAAqB5F,IAAI,sCAAsChG,UAAU,iEAAiEiG,QAAUL,IAAQA,EAAEC,OAAOG,IAAM,oBAAqBJ,EAAEC,OAAOE,IAAI,uEAGlPjG,IAAAC,cAAA,OAAKC,UAAU,sFACZkM,EAAMvL,IAAIwF,GAAUrG,IAAAC,cAACoB,EAAQ,CAACL,IAAKqF,EAAK/E,GAAIA,GAAI+E,EAAK/E,GAAIC,QAAS8K,EAAShG,EAAK/E,IAAKE,UAAW+K,EAAMlG,EAAK/E,IAAKG,UAAWoC,OAAO8I,KAAgB9I,OAAOwC,EAAK/E,YCvKhKgP,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,KAAKzN,IAAkD,IAAjD,OAAE4Q,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAShR,EACpE4Q,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCDDO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlR,IAAAC,cAACD,IAAMmR,WAAU,KACfnR,IAAAC,cAACgM,EAAG,QAIRqE,K","file":"static/js/main.662cef25.chunk.js","sourcesContent":["// Path: ui/src/Header.js (No Dark Mode)\r\nimport React from 'react';\r\n\r\n// Removed darkMode and toggleDarkMode props\r\nexport default function Header({ totalSpots, freeSpots }) {\r\n  return (\r\n    // Removed dark mode specific classes like dark:bg-gray-800, dark:text-gray-100\r\n    <header className=\"flex items-center justify-between p-4 bg-white shadow\">\r\n      <h1 className=\"text-2xl font-bold text-gray-900\">\r\n        Smart Parking ({freeSpots}/{totalSpots} free)\r\n      </h1>\r\n      {/* Dark mode toggle button REMOVED */}\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Notifications({\r\n  notes,          // array of { spot_id, timestamp }\r\n  onFilter,       // function to call when a note is clicked\r\n  muted,          // boolean\r\n  toggleMute      // function to mute/unmute\r\n}) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 w-64 z-50\">\r\n      <div className=\"flex items-center justify-between mb-2\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Alerts</h2>\r\n        <button\r\n          onClick={() => setCollapsed(c => !c)}\r\n          className=\"text-sm text-blue-600 dark:text-blue-400\"\r\n        >\r\n          {collapsed ? 'Expand' : 'Collapse'}\r\n        </button>\r\n      </div>\r\n\r\n      {!collapsed && (\r\n        <ul className=\"bg-white dark:bg-gray-800 shadow rounded overflow-auto max-h-60\">\r\n          {notes.map((n, i) => (\r\n            <li\r\n              key={i}\r\n              onClick={() => onFilter(n.spot_id)}\r\n              className=\"p-2 border-b last:border-b-0 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer\"\r\n            >\r\n              <div className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                Spot {n.spot_id} freed\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                {new Date(n.timestamp).toLocaleTimeString()}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      <div className=\"mt-2 text-right\">\r\n        <button\r\n          onClick={toggleMute}\r\n          className=\"text-sm text-red-500 dark:text-red-300\"\r\n        >\r\n          {muted ? 'Unmute' : 'Mute'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport default function SpotTile({ id, isFree, freeSince, highlight }) {\r\n  const [secs, setSecs] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // If the spot is not free, reset the counter and clear any interval\r\n    if (!isFree) {\r\n      setSecs(0);\r\n      return; \r\n    }\r\n\r\n    // Check if freeSince is a valid date string before creating a Date object\r\n    const freeDate = new Date(freeSince);\r\n    const t0 = freeDate.getTime();\r\n\r\n    // If t0 is NaN (invalid date), don't start the interval\r\n    if (isNaN(t0)) {\r\n        console.warn(`SpotTile ${id}: Invalid freeSince timestamp received: ${freeSince}`);\r\n        setSecs(0); \r\n        return;\r\n    }\r\n\r\n    // Start the interval only if the spot is free and the timestamp is valid\r\n    const iv = setInterval(() => {\r\n      const delta = Math.max(0, Math.floor((Date.now() - t0) / 1000));\r\n      setSecs(delta);\r\n    }, 1000);\r\n\r\n    // Clean up the interval when the component unmounts or dependencies change\r\n    return () => {\r\n      clearInterval(iv);\r\n      console.log(`SpotTile ${id}: Counter interval cleared.`); // Added log\r\n    };\r\n\r\n  }, [isFree, freeSince, id]); \r\n\r\n  return (\r\n    <div\r\n      className={`\r\n        p-4 flex flex-col items-center justify-center\r\n        rounded-lg shadow cursor-pointer\r\n        ${isFree\r\n          ? 'bg-green-200 text-green-800'\r\n          : 'bg-red-200 text-red-800'}\r\n        ${highlight ? 'ring-4 ring-blue-500' : ''}\r\n      `}\r\n      onClick={() => {/* optional: filter by this spot */}}\r\n    >\r\n      <div className=\"font-semibold mb-2\">Spot {id}</div>\r\n      {isFree ? (\r\n        <div className=\"text-sm\">{!isNaN(secs) ? `Free for ${secs}s` : 'Status unknown'}</div>\r\n      ) : (\r\n        <div className=\"text-sm\">Occupied</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// Path: ui/src/SpotsEditor.js\r\nimport React, { useEffect, useState, useMemo } from 'react';\r\nimport { Rnd } from 'react-rnd'; \r\n\r\nexport default function SpotsEditor({ initialSpots, videoSize, onSave, setSpots, apiBaseUrl }) {\r\n  const [currentSpots, setCurrentSpots] = useState([]); \r\n  const [history, setHistory] = useState([]); \r\n  const [selectedBoxId, setSelectedBoxId] = useState(null); \r\n\r\n  const videoFeedUrl = useMemo(() => {\r\n    if (!apiBaseUrl) return ''; \r\n    return `${apiBaseUrl}/webcam_feed`;\r\n  }, [apiBaseUrl]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"[SpotsEditor] Initializing with initialSpots:\", initialSpots);\r\n    const processedInitialSpots = initialSpots.map(s => ({\r\n        ...s,\r\n        id: String(s.id), \r\n        x: Math.round(s.x || 0), \r\n        y: Math.round(s.y || 0),\r\n        w: Math.round(s.w || 50), \r\n        h: Math.round(s.h || 50)  \r\n    }));\r\n    setCurrentSpots(processedInitialSpots);\r\n    setHistory([processedInitialSpots]); \r\n    setSelectedBoxId(null); \r\n  }, [initialSpots]);\r\n\r\n  const updateSpotsAndHistory = (newSpots) => {\r\n    setCurrentSpots(newSpots);\r\n    setHistory(h => [...h.slice(-19), newSpots]); \r\n  };\r\n\r\n  const onDragResize = (id, x, y, w, h) => {\r\n    const updatedSpots = currentSpots.map(s =>\r\n      String(s.id) === String(id) ? { \r\n        ...s, \r\n        x: Math.round(x), \r\n        y: Math.round(y), \r\n        w: Math.round(w), \r\n        h: Math.round(h)  \r\n      } : s \r\n    );\r\n    updateSpotsAndHistory(updatedSpots);\r\n  };\r\n\r\n  const addBox = () => {\r\n    const newId = currentSpots.length > 0 ? Math.max(0, ...currentSpots.map(s => parseInt(s.id, 10))) + 1 : 1;\r\n    const defaultBox = { \r\n        id: String(newId), \r\n        x: 20, y: 20, w: 100, h: 80, \r\n        is_available: true \r\n    };\r\n    console.log(\"[SpotsEditor] Adding new box:\", defaultBox);\r\n    const newSpotList = [...currentSpots, defaultBox];\r\n    updateSpotsAndHistory(newSpotList);\r\n  };\r\n\r\n  const removeBox = () => {\r\n    if (selectedBoxId == null) return; \r\n    const filteredSpots = currentSpots.filter(s => String(s.id) !== String(selectedBoxId));\r\n    console.log(\"[SpotsEditor] Removing box, new list:\", filteredSpots);\r\n    updateSpotsAndHistory(filteredSpots);\r\n    setSelectedBoxId(null); \r\n  };\r\n\r\n  const undo = () => {\r\n    if (history.length < 2) return; \r\n    const prevHistory = history.slice(0, -1);\r\n    const previousSpots = prevHistory[prevHistory.length - 1];\r\n    setHistory(prevHistory);\r\n    setCurrentSpots(previousSpots); \r\n    if (setSpots) { \r\n        setSpots(previousSpots); \r\n    }\r\n    setSelectedBoxId(null); \r\n  };\r\n\r\n  const handleSave = () => {\r\n    console.log(\"[SpotsEditor] handleSave called. currentSpots:\", JSON.parse(JSON.stringify(currentSpots))); // Deep copy for logging\r\n    const spotsToSave = currentSpots.map(s => ({\r\n      id: String(s.id), \r\n      x: Math.round(s.x),\r\n      y: Math.round(s.y),\r\n      w: Math.round(s.w),\r\n      h: Math.round(s.h)\r\n    }));\r\n    console.log(\"[SpotsEditor] spotsToSave (passed to App.js onSave):\", spotsToSave);\r\n    onSave(spotsToSave); \r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg shadow-inner\">\r\n      <div className=\"flex flex-wrap gap-3 mb-4\">\r\n        <button onClick={addBox} className=\"px-4 py-2 bg-green-600 text-white rounded-lg shadow hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 transition duration-150 ease-in-out\">Add Spot</button>\r\n        <button onClick={removeBox} disabled={selectedBoxId == null} className=\"px-4 py-2 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 transition duration-150 ease-in-out\">Remove Selected</button>\r\n        <button onClick={undo} disabled={history.length < 2} className=\"px-4 py-2 bg-yellow-500 text-white rounded-lg shadow hover:bg-yellow-600 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-opacity-50 transition duration-150 ease-in-out\">Undo</button>\r\n        <button onClick={handleSave} className=\"px-4 py-2 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out\">Save Configuration</button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"relative border-2 border-gray-400 dark:border-gray-600 rounded-lg overflow-hidden bg-black\" \r\n        style={{ width: videoSize.width, height: videoSize.height }}\r\n        onClick={(e) => { if (e.target === e.currentTarget) setSelectedBoxId(null);}}\r\n      >\r\n        {videoFeedUrl ? (\r\n            <img\r\n                src={videoFeedUrl} \r\n                alt=\"Live feed for spot configuration\"\r\n                className=\"absolute inset-0 w-full h-full object-contain\" \r\n                onError={(e) => { e.target.alt = \"Video feed unavailable. Check backend.\"; e.target.style.display='none'; }}\r\n            />\r\n        ) : (\r\n            <div className=\"absolute inset-0 w-full h-full flex items-center justify-center text-white bg-gray-700\">\r\n                Video feed URL not configured.\r\n            </div>\r\n        )}\r\n\r\n        {currentSpots.map(spot => (\r\n          <Rnd\r\n            key={spot.id}\r\n            bounds=\"parent\"\r\n            size={{ width: spot.w, height: spot.h }}\r\n            position={{ x: spot.x, y: spot.y }}\r\n            onDragStop={(_, d) => \r\n              onDragResize(spot.id, d.x, d.y, spot.w, spot.h)\r\n            }\r\n            onResizeStop={(_, __, ref, ___, pos) => \r\n              onDragResize(\r\n                spot.id,\r\n                pos.x, pos.y,\r\n                ref.offsetWidth, ref.offsetHeight\r\n              )\r\n            }\r\n            onClick={(e) => {\r\n                e.stopPropagation(); \r\n                setSelectedBoxId(spot.id);\r\n            }}\r\n            style={{ \r\n              border: `2px dashed ${String(selectedBoxId) === String(spot.id) ? 'blue' : 'rgba(255,255,255,0.7)'}`,\r\n              backgroundColor: String(selectedBoxId) === String(spot.id) ? 'rgba(0,0,255,0.2)' : 'rgba(255,255,255,0.1)',\r\n              boxSizing: 'border-box',\r\n              cursor: 'move',\r\n            }}\r\n            className=\"transition-all duration-100 ease-in-out\" \r\n          >\r\n            <div className=\"flex items-center justify-center w-full h-full text-white text-sm font-bold pointer-events-none select-none\">\r\n              {spot.id}\r\n            </div>\r\n          </Rnd>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Path: ui/src/WebcamStreamer.js (HTTP POST for Frames)\r\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\n\r\n// Configuration\r\nconst FRAME_RATE = 5; // Frames per second to send to backend\r\nconst IMAGE_QUALITY = 0.7; // JPEG quality (0.1 to 1.0)\r\nconst VIDEO_CONSTRAINTS = { video: { width: 640, height: 480 } };\r\n\r\nconst WebcamStreamer = ({ apiBaseUrl, onStreamingActive }) => { \r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [isStreaming, setIsStreaming] = useState(false); \r\n  const [error, setError] = useState(null);\r\n  const [statusMessage, setStatusMessage] = useState('Idle'); \r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const streamRef = useRef(null);\r\n  const streamIntervalRef = useRef(null);\r\n\r\n  const uploadFrameEndpoint = useMemo(() => {\r\n    if (!apiBaseUrl) {\r\n        console.warn(\"[WebcamStreamer] apiBaseUrl is null/undefined, uploadFrameEndpoint will be null.\");\r\n        return null;\r\n    }\r\n    return `${apiBaseUrl}/api/upload_frame`;\r\n  }, [apiBaseUrl]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"[WebcamStreamer] Component Mounted/Updated. Upload Endpoint:\", uploadFrameEndpoint);\r\n    return () => {\r\n        // console.log(\"[WebcamStreamer] Component Unmounting. Cleaning up...\");\r\n        if (streamIntervalRef.current) {\r\n            clearInterval(streamIntervalRef.current);\r\n        }\r\n    };\r\n  }, [uploadFrameEndpoint]);\r\n\r\n\r\n  const startCamera = useCallback(async () => {\r\n    // console.log(\"[WebcamStreamer] Attempting to start camera...\");\r\n    setError(null);\r\n    setStatusMessage(\"Starting camera...\");\r\n    try {\r\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        const stream = await navigator.mediaDevices.getUserMedia(VIDEO_CONSTRAINTS);\r\n        streamRef.current = stream;\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          await videoRef.current.play();\r\n        }\r\n        setIsCameraActive(true); \r\n        setStatusMessage(\"Camera active.\");\r\n        console.log('[WebcamStreamer] Camera started successfully.');\r\n      } else {\r\n        throw new Error('getUserMedia not supported.');\r\n      }\r\n    } catch (err) {\r\n      console.error('[WebcamStreamer] Error starting camera:', err.name, err.message);\r\n      setError(`Cam Error: ${err.name} - ${err.message}.`);\r\n      setStatusMessage(\"Camera error.\");\r\n      setIsCameraActive(false);\r\n      if (onStreamingActive) onStreamingActive(false);\r\n    }\r\n  }, [onStreamingActive]); \r\n  \r\n  const stopCamera = useCallback(() => {\r\n    // console.log(\"[WebcamStreamer] Stopping camera...\");\r\n    if (streamIntervalRef.current) {\r\n        clearInterval(streamIntervalRef.current);\r\n        streamIntervalRef.current = null;\r\n    }\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    if (videoRef.current) videoRef.current.srcObject = null;\r\n    \r\n    setIsStreaming(false); \r\n    setIsCameraActive(false); \r\n    \r\n    if (onStreamingActive) onStreamingActive(false); \r\n    setStatusMessage(\"Camera stopped.\");\r\n    // console.log('[WebcamStreamer] Camera stopped.');\r\n  }, [onStreamingActive]);\r\n\r\n  const captureAndSendFrame = useCallback(async () => {\r\n    // console.log(\"[WebcamStreamer] captureAndSendFrame called\"); \r\n\r\n    if (!videoRef.current || !canvasRef.current || !isCameraActive || !uploadFrameEndpoint) {\r\n      // console.log(\"[WebcamStreamer] captureAndSendFrame: Preconditions not met. isCameraActive:\", isCameraActive, \"uploadFrameEndpoint:\", uploadFrameEndpoint);\r\n      return;\r\n    }\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    if (video.videoWidth === 0 || video.videoHeight === 0 || video.paused || video.ended) {\r\n      // console.log(\"[WebcamStreamer] captureAndSendFrame: Video not ready or ended.\");\r\n      return;\r\n    }\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    const context = canvas.getContext('2d');\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    const frameDataUrl = canvas.toDataURL('image/jpeg', IMAGE_QUALITY);\r\n\r\n    try {\r\n      const response = await fetch(uploadFrameEndpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', },\r\n        body: JSON.stringify({ frame: frameDataUrl }),\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.text();\r\n        console.error(`[WebcamStreamer] HTTP error sending frame: ${response.status} ${response.statusText}`, errorData);\r\n        setError(`HTTP error: ${response.status}. Check console.`);\r\n        // Consider stopping streaming on persistent errors\r\n        // setIsStreaming(false); \r\n      } else {\r\n         // console.log(\"[WebcamStreamer] Frame send success (HTTP)\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"[WebcamStreamer] Network error sending frame via HTTP POST:\", err);\r\n      setError(\"Network error sending frame. Check console.\");\r\n      // setIsStreaming(false); // Optionally stop streaming on network error\r\n    }\r\n  }, [isCameraActive, uploadFrameEndpoint]); \r\n\r\n  useEffect(() => {\r\n    // console.log(`[WebcamStreamer] Frame sending effect triggered. isStreaming: ${isStreaming}, isCameraActive: ${isCameraActive}`);\r\n    if (isStreaming && isCameraActive) {\r\n      if (streamIntervalRef.current) clearInterval(streamIntervalRef.current); \r\n      streamIntervalRef.current = setInterval(captureAndSendFrame, 1000 / FRAME_RATE);\r\n      setStatusMessage(`Streaming ${FRAME_RATE} FPS via HTTP`);\r\n      console.log(`[WebcamStreamer] Started HTTP frame sending at ${FRAME_RATE} FPS`);\r\n      if (onStreamingActive) onStreamingActive(true);\r\n    } else {\r\n      if (streamIntervalRef.current) {\r\n        clearInterval(streamIntervalRef.current);\r\n        streamIntervalRef.current = null;\r\n        setStatusMessage(isCameraActive ? \"Camera active, not streaming.\" : \"Streaming stopped.\");\r\n        // console.log('[WebcamStreamer] Stopped HTTP frame sending.');\r\n      }\r\n      // Ensure parent is notified if streaming stops for any reason leading to this else block\r\n      if (onStreamingActive && isStreaming === false) onStreamingActive(false); \r\n    }\r\n    return () => { if (streamIntervalRef.current) clearInterval(streamIntervalRef.current); };\r\n  }, [isStreaming, isCameraActive, captureAndSendFrame, onStreamingActive]);\r\n\r\n  useEffect(() => {\r\n    return () => { stopCamera(); };\r\n  }, [stopCamera]);\r\n\r\n  const handleStartStreaming = async () => {\r\n    // console.log(\"[WebcamStreamer] 'Start HTTP Streaming' button clicked.\");\r\n    setError(null);\r\n    if (!isCameraActive) { \r\n      // console.log(\"[WebcamStreamer] Camera not active, calling startCamera first.\");\r\n      await startCamera(); \r\n      if (!streamRef.current) {\r\n          // Error handling is now within startCamera, which sets error state\r\n          return; \r\n      }\r\n      // Give a moment for isCameraActive state to reflect\r\n      await new Promise(resolve => setTimeout(resolve, 50));\r\n    }\r\n    \r\n    // Check isCameraActive state directly after attempting to start camera\r\n    // This relies on the fact that startCamera will set isCameraActive\r\n    // For more robustnes, ensure startCamera completes before checking isCameraActive for setIsStreaming\r\n    if (isCameraActive || streamRef.current) { // Check both, streamRef.current is more direct after await\r\n        console.log(\"[WebcamStreamer] Camera is active, setting isStreaming to true for HTTP.\");\r\n        setIsStreaming(true);\r\n    } else {\r\n        const msg = \"Camera could not be activated. Cannot start streaming.\";\r\n        console.error(\"[WebcamStreamer]\", msg);\r\n        if (!error) setError(msg); \r\n        setStatusMessage(\"Camera not ready.\");\r\n    }\r\n  };\r\n\r\n  const handleStopStreaming = () => {\r\n    // console.log(\"[WebcamStreamer] 'Stop HTTP Streaming' button clicked.\");\r\n    setIsStreaming(false); // This will trigger the useEffect to clear interval and update status\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-800 text-white rounded-lg shadow-xl w-full max-w-2xl mx-auto my-8 font-sans\">\r\n      <h3 className=\"text-xl font-semibold mb-4 text-center text-teal-400\">Webcam (HTTP Upload Mode)</h3>\r\n      <div className=\"mb-4 bg-black rounded-md overflow-hidden shadow-inner\">\r\n        <video ref={videoRef} muted autoPlay playsInline className=\"w-full h-auto aspect-video\" />\r\n      </div>\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 mb-4\">\r\n        {!isCameraActive ? (\r\n          <button onClick={startCamera} className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-3 rounded-lg shadow\">\r\n            Start Camera\r\n          </button>\r\n        ) : (\r\n          <button onClick={stopCamera} className=\"w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-3 rounded-lg shadow\">\r\n            Stop Camera\r\n          </button>\r\n        )}\r\n        {isCameraActive && !isStreaming ? (\r\n          <button onClick={handleStartStreaming} disabled={!isCameraActive} className=\"w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-3 rounded-lg shadow disabled:opacity-50\">\r\n            Start HTTP Streaming\r\n          </button>\r\n        ) : isCameraActive && isStreaming ? (\r\n          <button onClick={handleStopStreaming} className=\"w-full bg-yellow-500 hover:bg-yellow-600 text-black font-semibold py-2 px-3 rounded-lg shadow\">\r\n            Stop HTTP Streaming\r\n          </button>\r\n        ) : (\r\n          <div className=\"w-full bg-gray-700 text-gray-400 font-semibold py-2 px-3 rounded-lg shadow text-center text-sm\">\r\n            Start camera to enable streaming\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"space-y-2 text-xs sm:text-sm\">\r\n        {error && (<div className=\"bg-red-700 border border-red-900 text-white px-3 py-2 rounded-lg\" role=\"alert\"><strong>Error: </strong><span className=\"block sm:inline\">{error}</span></div>)}\r\n        <div className={`p-2 rounded-lg shadow ${isCameraActive ? 'bg-green-700' : 'bg-gray-700'}`}><span className=\"font-semibold\">Camera:</span> {isCameraActive ? 'Active' : 'Inactive'}</div>\r\n        <div className={`p-2 rounded-lg shadow ${isStreaming ? 'bg-green-700' : 'bg-gray-700'}`}><span className=\"font-semibold\">HTTP Streaming:</span> {isStreaming ? `Active (${FRAME_RATE} FPS)` : 'Inactive'} ({statusMessage})</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WebcamStreamer;\r\n","// Path: ui/src/App.js (Props for HTTP WebcamStreamer)\r\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport Header from './Header'; \r\nimport Notifications from './Notifications';\r\nimport SpotTile from './SpotTile';\r\nimport SpotsEditor from './SpotsEditor';\r\nimport WebcamStreamer from './WebcamStreamer'; // This will be the HTTP POST version\r\nimport './index.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\r\nconst PROCESSED_VIDEO_URL = `${API_BASE_URL}/webcam_feed`; \r\n\r\nconst API_SPOTS_SAVE_ROUTE = `${API_BASE_URL}/api/nuke_test_save`; \r\nconst API_SPOTS_GET_ROUTE = `${API_BASE_URL}/api/spots_v10_get`; \r\n\r\nconst NOTIFICATION_DURATION = 10000;\r\nconst POLLING_INTERVAL = 5000; \r\n\r\nexport default function App() {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [spots, setSpots] = useState([]);\r\n  const [statuses, setStatuses] = useState({}); \r\n  const [times, setTimes] = useState({});     \r\n  const [notes, setNotes] = useState([]);     \r\n  const [muted, setMuted] = useState(false);\r\n  const [filterSpot, setFilterSpot] = useState(null);\r\n  const [streamSource, setStreamSource] = useState('webcam'); \r\n  const [processedFeedKey, setProcessedFeedKey] = useState(Date.now());\r\n  \r\n  const prevStatusesRef = useRef({}); \r\n\r\n  // getWebSocketUrl is no longer strictly needed by WebcamStreamer if it only uses HTTP POST\r\n  // but App.js might still use it if other WebSockets are present (e.g., for /ws/spots if implemented)\r\n  // For now, we can leave it, WebcamStreamer just won't use its output.\r\n  const getWebSocketUrl = useCallback(() => {\r\n    if (!API_BASE_URL) { console.error(\"[App.js] API_BASE_URL is not set.\"); return null; }\r\n    if (API_BASE_URL.startsWith('https://')) return `wss://${API_BASE_URL.substring(8)}/ws/video_stream_upload`;\r\n    if (API_BASE_URL.startsWith('http://')) return `ws://${API_BASE_URL.substring(7)}/ws/video_stream_upload`;\r\n    console.error(\"[App.js] Cannot determine WebSocket protocol from API_BASE_URL:\", API_BASE_URL);\r\n    return null;\r\n  }, []); \r\n  const webcamWebSocketUrl = getWebSocketUrl(); // This will be unused by HTTP WebcamStreamer\r\n\r\n  const fetchSpots = useCallback(() => {\r\n    fetch(API_SPOTS_GET_ROUTE) \r\n      .then(r => {\r\n        if (!r.ok) {\r\n          const errorDetail = `HTTP error ${r.status} (${r.statusText}) while fetching spots from ${API_SPOTS_GET_ROUTE}`;\r\n          console.error(errorDetail, r);\r\n          throw new Error(errorDetail);\r\n        }\r\n        return r.json();\r\n      })\r\n      .then(data => {\r\n        if (data && data.spots) {\r\n          const newApiSpots = data.spots; \r\n          const newSpotConfigs = [];\r\n          const currentFetchStatuses = {}; \r\n          newApiSpots.forEach(spot => {\r\n            const spotIdStr = String(spot.id);\r\n            newSpotConfigs.push({id: spotIdStr, x: spot.x, y: spot.y, w: spot.w, h: spot.h});\r\n            currentFetchStatuses[spotIdStr] = !spot.is_available; \r\n          });\r\n          const newNotesToGenerate = [];\r\n          setTimes(prevTimes => {\r\n            const newTimesData = {...prevTimes}; \r\n            newSpotConfigs.forEach(spotConfig => {\r\n              const spotIdStr = spotConfig.id;\r\n              const isNowOccupied = currentFetchStatuses[spotIdStr];\r\n              const wasPreviouslyOccupied = prevStatusesRef.current[spotIdStr]; \r\n              if (wasPreviouslyOccupied === true && isNowOccupied === false) { \r\n                const nowTimestamp = new Date().toISOString();\r\n                newTimesData[spotIdStr] = nowTimestamp; \r\n                if (!muted) {\r\n                  const notificationId = `${spotIdStr}-${nowTimestamp}-${Math.random()}`;\r\n                  newNotesToGenerate.push({ id: notificationId, spot_id: spotIdStr, timestamp: nowTimestamp });\r\n                }\r\n              } else if (isNowOccupied === true) { \r\n                delete newTimesData[spotIdStr]; \r\n              } else if (isNowOccupied === false && newTimesData[spotIdStr] === undefined) {\r\n                 newTimesData[spotIdStr] = new Date().toISOString(); \r\n              }\r\n            });\r\n            return newTimesData;\r\n          });\r\n          setSpots(newSpotConfigs);\r\n          setStatuses(currentFetchStatuses);\r\n          if (newNotesToGenerate.length > 0) {\r\n            setNotes(prevNotesState => {\r\n              const combinedNotes = [...newNotesToGenerate, ...prevNotesState];\r\n              return combinedNotes.slice(0, 5); \r\n            });\r\n          }\r\n          prevStatusesRef.current = { ...currentFetchStatuses };\r\n        } else { \r\n            console.error(\"[App.js] Fetched spots data malformed:\", data); \r\n        }\r\n      })\r\n      .catch(error => { \r\n          console.error(\"[App.js] Failed to fetch spots (network or parsing error):\", error); \r\n      });\r\n  }, [muted]); \r\n\r\n  useEffect(() => {\r\n    if (!editMode) {\r\n      const timerId = setTimeout(() => { fetchSpots(); }, 1000); \r\n      const intervalId = setInterval(fetchSpots, POLLING_INTERVAL); \r\n      return () => { clearTimeout(timerId); clearInterval(intervalId); };\r\n    }\r\n  }, [editMode, fetchSpots]); \r\n\r\n  useEffect(() => {\r\n    if (notes.length === 0) return;\r\n    const timers = notes.map(note => setTimeout(() => setNotes(prevNotes => prevNotes.filter(n => n.id !== note.id)), NOTIFICATION_DURATION));\r\n    return () => timers.forEach(timer => clearTimeout(timer));\r\n  }, [notes]);\r\n\r\n  const handleSave = useCallback((updatedSpotsFromEditor) => {\r\n    const spotsPayloadToSend = { spots: updatedSpotsFromEditor.map(s => ({ id: String(s.id), x: Math.round(s.x), y: Math.round(s.y), w: Math.round(s.w), h: Math.round(s.h) })) };\r\n    fetch(API_SPOTS_SAVE_ROUTE, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(spotsPayloadToSend) })\r\n      .then(r => {\r\n        if (!r.ok) { return r.json().then(errData => { const detail = errData.detail || `HTTP error ${r.status}`; throw new Error(Array.isArray(detail) ? JSON.stringify(detail) : String(detail)); }).catch(() => { throw new Error(`HTTP error ${r.status} from ${API_SPOTS_SAVE_ROUTE}. Non-JSON response.`); }); }\r\n        return r.json();\r\n      })\r\n      .then(data => {\r\n        if (data.message && data.message.includes(\"Spots saved to DB successfully!\")) { \r\n          setEditMode(false); fetchSpots(); \r\n        } else { const errTxt = data.detail ? JSON.stringify(data.detail) : (data.message || 'Save failed: Unknown structure.'); console.error('Failed to save spots:', errTxt, data); alert(`Failed to save spots: ${errTxt}`);}\r\n      })\r\n      .catch(error => { console.error('Error saving spots:', error); alert(`Error saving spots: ${error.message}`); });\r\n  }, [fetchSpots]); \r\n\r\n  const handleWebcamStreamingActive = useCallback((isActive) => {\r\n    if (isActive) { setProcessedFeedKey(Date.now()); }\r\n  }, []);\r\n\r\n  const visibleNotes = filterSpot ? notes.filter(n => String(n.spot_id) === String(filterSpot)) : notes;\r\n  const totalSpotsCount = spots.length;\r\n  const freeSpotsCount = Object.values(statuses).filter(isOccupied => !isOccupied).length;\r\n\r\n  return (\r\n    <div className={`App min-h-screen bg-gray-100 text-gray-900`}> \r\n      <Header freeSpots={freeSpotsCount} totalSpots={totalSpotsCount}/>\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex justify-center mb-6 space-x-4\">\r\n          <button onClick={() => setEditMode(e => !e)} className=\"px-6 py-3 bg-purple-600 text-white font-semibold rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-75 transition duration-150 ease-in-out\">\r\n            {editMode ? 'Cancel Spot Editing' : 'Edit Parking Spots'}\r\n          </button>\r\n          {!editMode && ( \r\n            <button onClick={() => { if (streamSource !== 'webcam') setStreamSource('webcam'); setProcessedFeedKey(Date.now()); }} className={`px-4 py-3 rounded-lg font-semibold shadow-md transition duration-150 ease-in-out bg-teal-600 text-white hover:bg-teal-700 focus:ring-teal-500 focus:outline-none focus:ring-2 focus:ring-opacity-75`}> \r\n              Activate/Refresh Webcam Feed\r\n            </button> \r\n          )}\r\n        </div>\r\n\r\n        {/* Pass apiBaseUrl to WebcamStreamer, webSocketUrl is no longer used by it in HTTP POST mode */}\r\n        {streamSource === 'webcam' && ( // Simplified condition if API_BASE_URL is always present\r\n          <div className={editMode ? \"hidden\" : \"block mb-6\"}> \r\n            <WebcamStreamer\r\n              apiBaseUrl={API_BASE_URL} \r\n              onStreamingActive={handleWebcamStreamingActive} \r\n            />\r\n          </div>\r\n        )}\r\n        {/* Remove error display for webcamWebSocketUrl if it's no longer primary */}\r\n\r\n        {editMode ? ( \r\n          <SpotsEditor initialSpots={spots} videoSize={{ width: 800, height: 600 }} onSave={handleSave} setSpots={setSpots} apiBaseUrl={API_BASE_URL} /> \r\n        ) : ( \r\n          <> \r\n            <Notifications notes={visibleNotes} onFilter={setFilterSpot} muted={muted} toggleMute={() => setMuted(m => !m)}/> \r\n            <main className=\"p-4\"> \r\n              {streamSource === 'webcam' && ( // Only show processed feed if webcam is the source\r\n                <div className=\"flex flex-col items-center mb-8\">\r\n                  <h3 className=\"text-lg font-semibold mb-2 text-center text-gray-700\">Processed Webcam Feed</h3> \r\n                  <img key={processedFeedKey} src={PROCESSED_VIDEO_URL} alt=\"Parking feed (processed by backend)\" className=\"w-full max-w-2xl rounded-lg shadow-lg border-2 border-gray-300\" onError={(e) => { e.target.alt = \"Feed unavailable.\"; e.target.src=\"https://placehold.co/640x480/2d3748/cbd5e0?text=Feed+Unavailable\"; }}/> \r\n                </div>\r\n              )}\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\"> \r\n                {spots.map(spot => ( <SpotTile key={spot.id} id={spot.id} isFree={!statuses[spot.id]} freeSince={times[spot.id]} highlight={String(filterSpot) === String(spot.id)}/> ))} \r\n              </div> \r\n            </main> \r\n          </> \r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}